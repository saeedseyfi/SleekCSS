/***
    title: Button
    section: Buttons
    description: Use to create buttons. Buttons come in various sizes and colors. Add more colors and customize your buttons in config/button.scss. You can also use @include button;
    example:
        <p><a href="#" class="button">I'm a normal button</a></p>
        <p><button class="button--ghost">Button elements automatically look like buttons</button></p>
        <p><input type="submit" value="Submit inputs too!"></p>
        <p><button class="button--wide">Full width!</button></p>
        <p><a href="#" class="button">Continue</a> <a href="#" class="button button--gray button--ghost">Cancel</a></p>
        <p><a href="#" class="button button--small">Small button</a></p>
        <p><a href="#" class="button button--large">Large button</a></p>
***/
@mixin button-background ($color) {
	// If a gradient is specified
	@if ($button-gradient) {
		background-image: linear-gradient($color, darken($color, $button-gradient));

		// TODO: Something here? Eh? WTF is this comment supposed to mean? :P
		&:hover {
			background-image: linear-gradient($color, darken($color, $button-gradient));
		}

		// Invert gradient on active
		&:active {
			background-image: linear-gradient(darken($color, $button-gradient), $color);
		}
	}
	// Solid background
	@else {
		background-color: $color;

		// Darken on hover
		&:hover {
			background-color: darken($color, 5%);
		}

		// Darken even more on active
		&:active {
			background-color: darken($color, 10%);
		}
	}

	// Invert text color if button too light
	@if (lightness($color) > 70) {
		color: invert($button-text-color);

		&:hover {
			color: invert($button-text-color);
		}
	}

	// Border?
	@if ($button-border-width) {
		$border-color: transparent;

		@if ($button-border-color == true) {
			$border-color: darken($color, 10%);
		}
		@elseif ($button-border-color) {
			$border-color: $button-border-color;
		}

		border: $button-border-width $button-border-style $border-color;
	}
	@else {
		border: 0;
	}
}

@mixin button ($color: $button-color) {
	// Gradient or solid background with hover/active states
	@include button-background($color);

	// Hello
	display: inline-block;
	vertical-align: middle;

	// Size
	box-sizing: border-box;
	padding: $button-padding-vertical $button-padding-horizontal;

	// A button with only an icon
	&[class*="icon-"]:empty:not([value]) {
		padding-left: $button-empty-padding-horizontal;
		padding-right: $button-empty-padding-horizontal;
	}

	// Font styling
	@if ($button-font-family) {
		font-family: $button-font-family;
	}

	font-size: $button-font-size;
	line-height: $button-line-height;
	color: $button-text-color;
	font-weight: $button-font-weight;
	font-style: $button-font-style;
	text-transform: $button-text-transform;
	text-decoration: none;
	text-align: center;
	// cursor: default;

	@if ($button-letter-spacing) {
		letter-spacing: $button-letter-spacing;
	}

	a,
	a:hover {
		color: $button-text-color;
		text-decoration: none;
	}

	&:hover {
		color: $button-text-color;
		text-decoration: none;
	}

	// Radius
	border-radius: $button-border-radius;

	// Transition?
	@if ($button-transition == true) {
		transition: all $transition-default $transition-easing;
	}
	@elseif ($button-transition) {
		transition: $button-transition;
	}

	// Text shadow?
	@if ($button-text-shadow == true) {
		text-shadow: -1px -1px 0 $color-shadow;
	}
	@elseif ($button-text-shadow) {
		text-shadow: $button-text-shadow;
	}
	@else {
		text-shadow: none;
	}

	// Box shadow?
	@if ($button-shadow == true) {
		box-shadow: 1px 1px 1px $color-shadow;
	}
	@elseif ($button-shadow) {
		box-shadow: $button-shadow;
	}
	@else {
		box-shadow: none;
	}
}

@mixin button-ghost ($color: $button-color, $opacity: $button-ghost-opacity) {
	background-color: transparent;
	color: $color;
	border: $button-border-width $button-border-style $color;

	&:hover {
		@if ($opacity == 1) {
			background-color: $color;

			@if (lightness($color) > 70) {
				color: invert($button-text-color);
			}
			@else {
				color: $button-text-color;
			}
		}
		@else {
			background-color: rgba($color, $opacity);
			color: $color;
		}
	}
}

// Button classes
.button {
	@include button;
}

.button--ghost {
	@include button-ghost;
}

// Button colors
@each $bc in $button-colors {
	.button--#{nth($bc, 1)} {
		@include button-background(nth($bc, 2));

		&.button--ghost {
			@include button-ghost(nth($bc, 2));
		}
	}
}

// Small
.button--small {
	font-size: $font-size-small;
	padding: #{$button-padding-vertical * $button-small-percentage} #{$button-padding-horizontal * $button-small-percentage};
}

// Large
.button--large {
	font-size: $font-size-large;
}

// Wide
.button--wide {
	display: block;
	width: 100%; // In case it's used on an input[type=submit]
}
