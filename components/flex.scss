/***
    title: Flex
    section: Grid
    description: Use to align elements in rows and columns. Perfect for use on ul/li setups or indeed any parent/child markup. Use bp--modifiers to set number of columns in different widths. Customize gutter and breakpoints in config file. You can also use ul {@include flex-grid(3)}.
    example:
        <ul class="flex--2--bp-medium flex--3--bp-large">
            <li><img src="http://placehold.it/320x240" class="img--wide"> I'm two columns</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> In low resolution</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> But three columns</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> In high</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> Resolutions</li>
            <li><img src="http://placehold.it/320x240" class="img--wide"> Cool?</li>
        </ul>
***/
@mixin flex-grid ($num: 3, $gutter: $gutter-default) {
	display: flex;
	align-items: stretch;
	justify-content: space-between;
	flex-wrap: wrap;

	> * {
		@include flex-grid-item($num, $gutter);
	}
}

@mixin flex-grid-item ($num: 3, $gutter: $gutter-default) {
	$total-gutter: $gutter * ($num - 1);
	$width-subtract: $total-gutter / $num;

	min-width: calc(#{(100% / $num)} - #{$width-subtract}); // IE needs this (and maybe FF?)
	max-width: calc(#{(100% / $num)} - #{$width-subtract}); // For Firefox(and IE?)?? (and Chrome, try a word that's longer than the width of the element)
	flex: 0 0 calc(#{(100% / $num)} - #{$width-subtract});

	margin-bottom: $gutter; // Same space between and below
}

// Remove potential list style and margin
// in case flex--* is used on an unordered list
ul[class*="flex--"] {
	margin-left: 0;
	padding-left: 0;
	list-style: none;
}

// Make sure flex items have margin bottom(?)
[class*="flex--"] {
	> * {
		margin-bottom: $gutter-default;
	}
}

// Create flex--X classes for all specified column counts
@each $num in $col-nums {
	.flex--#{nth($num, 1)} {
		@include flex-grid(nth($num, 2), $gutter-default);
	}
}

// Create flex--X--bp-Y classes for all specified column counts and breakpoints
@each $bp in $col-breakpoints {
	@each $num in $col-nums {
		@media #{nth($bp, 2)} {
			.flex--#{nth($num, 1)}--#{nth($bp, 1)} {
				@include flex-grid(nth($num, 2), $gutter-default);
			}
		}
	}
}
